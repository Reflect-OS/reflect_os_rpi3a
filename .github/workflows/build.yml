name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  get-br-dependencies:
    runs-on: ubuntu-20.04
    name: Get BR Dependencies
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: 27
          elixir-version: 1.17.2
      - name: Cache Nerves Downloads
        uses: actions/cache@v4
        with:
            path: ~/.nerves/dl
            key: nerves-dl-${{github.sha}}
      - run: mix deps.get
      - run: mix hex.build
      - name: Nerves br create build
        run: ./deps/nerves_system_br/create-build.sh nerves_defconfig temp_nerves_system
      - name: Make br dependencies
        run: make source
        working-directory: temp_nerves_system

  build-system:
    runs-on: ubuntu-20.04
    name: Build System
    needs: [ get-br-dependencies ]
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: 27
          elixir-version: 1.17.2
      - name: Install Nerves Bootstrap
        run: mix archive.install hex nerves_bootstrap --force
      - run: mix deps.get
      - name: Restore Nerves Downloads
        id: restore-br-dependencies
        uses: actions/cache/restore@v4
        with:
          path: ~/.nerves/dl
          key: nerves-dl-${{github.sha}}
      - name: Validate Hex Package
        run: mix hex.build
      - name: Build
        run: mix compile
      - name: Check Build
        run: "[ -d .nerves ] || (echo 'VERSION file needs to be bumped or a config file needs to change to force a build'; exit 1)"
      - name: Lint
        run: mix nerves.system.lint nerves_defconfig
      - name: Create artifact directory
        run: mkdir -p deploy/system/artifacts
      - name: Copy CHANGELOG
        run: cp ./CHANGELOG.md deploy/system/CHANGELOG.md
      - name: Copy VERSION
        run: cp ./VERSION deploy/system/VERSION
      - name: Split Repo name
        env:
          REPO: ${{github.repository}}
        id: split-repo
        run: echo "fragment=${REPO##*/}" >> "$GITHUB_OUTPUT"
      - name: Create artifacts
        run: mix nerves.artifact ${{ steps.split-repo.outputs.fragment }} --path deploy/system/artifacts
      - name: Store Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nerves-system
          path: deploy/system/artifacts
      - name: Cache Nerves System
        uses: actions/cache/save@v4
        with:
          path: deploy/system
          key: deploy/system-${{github.sha}}
  
  release-system:
    name: Release System
    if: ${{ github.ref == 'refs/heads/main' }}
    environment: Release
    needs: [ build-system ]
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: erlef/setup-beam@v1
        with:
          otp-version: 27
          elixir-version: 1.17.2

      - name: Restore Nerves System
        uses: actions/cache/restore@v4
        with:
          path: deploy/system
          key: deploy/system-${{github.sha}}
      
      - name: Get Version
        id: get-version
        run: echo "version=$(cat deploy/system/VERSION)" >> "$GITHUB_OUTPUT"

      - name: Create release notes
        run: grep -Pazo "(?s)(?<=## v${{ steps.get-version.outputs.version }})[^#]+" deploy/system/CHANGELOG.md | sed '/./,$!d' > deploy/system/RELEASE_NOTES
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get-version.outputs.version}}
          body_path: deploy/system/RELEASE_NOTES
          files: deploy/system/artifacts/**
      
      - name: Fetch Dependencies
        run: mix deps.get

      - name: Publish Package
        run: mix hex.publish --yes --dry-run
        env:
          HEX_API_KEY: ${{ secrets.HEX_API_KEY }}

  prepare-next-release:
    name: Prepare Next Release
    needs: [ release-system ]
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Get Next Version
        id: get-next-version
        run: echo "version=$(cat VERSION | awk -F. '{OFS="."; $NF+=1; print $0}')" >> "$GITHUB_OUTPUT"

      - name: Set Next Version
        run: echo ${{ steps.get-next-version.outputs.version}} > VERSION

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Bump version for next release